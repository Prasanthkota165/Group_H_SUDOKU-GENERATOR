REARRANGE SUDOKU ROWS, COLUMNS TESTING RESULT
-----------------------------------------------
1. All the 4 numbers in each row are swapped randomly in the input parameter sudoku_template.
rearrange_cols_rows function has ****PASSED**** the swapping test.
-----------------------------------------------
2. Input parameter of the function is within the 9X9 boundaries.
rearrange_cols_rows function has ***PASSED*** the input boundary test.
-----------------------------------------------
3. Input parameter of the function is within the 9X9 boundaries.
rearrange_cols_rows function has ***PASSED*** the output boundary test.
-----------------------------------------------
4. The input parameter sudoku_template has the values in the range [1,9] in rows,columns,3x3 block. 
rearrange_cols_rows function input has ***PASSED*** the range test.
-----------------------------------------------
5. The output parameter sudoku_template has the values in the range [1,9] in rows,columns,3x3 block. 
rearrange_cols_rows function output has ***PASSED*** the range test.
-----------------------------------------------
6. Input and output parameters of the function are not identical.
rearrange_cols_rows function has ***PASSED*** the identical test.
-----------------------------------------------
->Reference to Test 6, Identical sudokus
------------
  Input parameter rearranged_sudoku: 
  1   2   3   4   5   6   7   8   9 
  4   5   6   7   8   9   1   2   3 
  7   8   9   1   2   3   4   5   6 
  2   3   1   5   6   4   8   9   7 
  5   6   4   8   9   7   2   3   1 
  8   9   7   2   3   1   5   6   4 
  3   1   2   6   4   5   9   7   8 
  6   4   5   9   7   8   3   1   2 
  9   7   8   3   1   2   6   4   5 

  Output parameter rearranged_sudoku: 
  5   9   8   3   7   2   1   6   4 
  7   3   2   1   4   6   9   8   5 
  4   1   6   9   5   8   3   2   7 
  6   4   1   5   8   9   7   3   2 
  8   5   9   7   2   3   4   1   6 
  2   7   3   4   6   1   5   9   8 
  9   8   5   2   3   7   6   4   1 
  3   2   7   6   1   4   8   5   9 
  1   6   4   8   9   5   2   7   3 

  Check the numbers with the input parameter.
--------------------------
->Reference to Test 5 
------------
  Check the values of rearranged_sudoku in the range [1,9]

  5   9   8   3   7   2   1   6   4 
  7   3   2   1   4   6   9   8   5 
  4   1   6   9   5   8   3   2   7 
  6   4   1   5   8   9   7   3   2 
  8   5   9   7   2   3   4   1   6 
  2   7   3   4   6   1   5   9   8 
  9   8   5   2   3   7   6   4   1 
  3   2   7   6   1   4   8   5   9 
  1   6   4   8   9   5   2   7   3 
--------------------------
->Reference to Test 4 
------------
  Check the values of sudoku_template in the range [1,9]

  1   2   3   4   5   6   7   8   9 
  4   5   6   7   8   9   1   2   3 
  7   8   9   1   2   3   4   5   6 
  2   3   1   5   6   4   8   9   7 
  5   6   4   8   9   7   2   3   1 
  8   9   7   2   3   1   5   6   4 
  3   1   2   6   4   5   9   7   8 
  6   4   5   9   7   8   3   1   2 
  9   7   8   3   1   2   6   4   5 
--------------------------
->Reference to Test 3, Within 9X9 boundary 
------------
The row boundary of the input parameter rearranged_sudoku is: 9
The column boundary of the input parameter rearranged_sudoku is: 9
--------------------------
->Reference to Test 2, within 9x9 boundary 
------------
The row boundary of the input parameter sudoku_template is: 9
The column boundary of the input parameter sudoku_template is: 9
--------------------------
->Reference to Test 1 
------------
  Input parameter sudoku_template: 
  1   2   3   4   5   6   7   8   9 
  4   5   6   7   8   9   1   2   3 
  7   8   9   1   2   3   4   5   6 
  2   3   1   5   6   4   8   9   7 
  5   6   4   8   9   7   2   3   1 
  8   9   7   2   3   1   5   6   4 
  3   1   2   6   4   5   9   7   8 
  6   4   5   9   7   8   3   1   2 
  9   7   8   3   1   2   6   4   5 
  Output paramter rearranged_sudoku: 
  1   8   3   4   5   2   6   7   9 -- 4 numbers swapped 
  4   5   2   6   7   9   1   8   3 -- 4 numbers swapped 
  6   7   9   1   8   3   4   5   2 -- 4 numbers swapped 
  8   3   1   5   2   4   7   9   6 -- 4 numbers swapped 
  5   2   4   7   9   6   8   3   1 -- 4 numbers swapped 
  7   9   6   8   3   1   5   2   4 -- 4 numbers swapped 
  3   1   8   2   4   5   9   6   7 -- 4 numbers swapped 
  2   4   5   9   6   7   3   1   8 -- 4 numbers swapped 
  9   6   7   3   1   8   2   4   5 -- 4 numbers swapped 
--------------------------
